{"ast":null,"code":"var _jsxFileName = \"/Users/maple/Desktop/employeeDirectory/employeeDirectory/employee_directory/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Jumbotron from \"./component/Jumbotron\";\nimport Textbox from \"./component/Textbox\";\nimport Table from \"./component/Table\";\nimport EmployeeContext from \"./utils/EmployeeContext\";\nimport API from \"./utils/api\";\n\nfunction App() {\n  const [employeeState, setEmployeeState] = useState({\n    employeeList: [],\n    originalList: [],\n    search: \"\"\n  });\n  useEffect(() => {\n    API.getEmployee().then(res => {\n      console.log(res.data.results);\n      setEmployeeState({ ...employeeState,\n        employeeList: res.data.results,\n        originalList: res.data.results\n      });\n    });\n  }, []);\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n  }\n\n  return /*#__PURE__*/React.createElement(EmployeeContext.Provider, {\n    value: employeeState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Textbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maple/Desktop/employeeDirectory/employeeDirectory/employee_directory/src/App.js"],"names":["React","useState","useEffect","Jumbotron","Textbox","Table","EmployeeContext","API","App","employeeState","setEmployeeState","employeeList","originalList","search","getEmployee","then","res","console","log","data","results","handleInputChange","event","name","value","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC;AACjDU,IAAAA,YAAY,EAAE,EADmC;AAEjDC,IAAAA,YAAY,EAAE,EAFmC;AAGjDC,IAAAA,MAAM,EAAE;AAHyC,GAAD,CAAlD;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,GAAG,CAACO,WAAJ,GAAkBC,IAAlB,CAAwBC,GAAD,IAAS;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACAV,MAAAA,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEfE,QAAAA,YAAY,EAAEK,GAAG,CAACG,IAAJ,CAASC,OAFR;AAGfR,QAAAA,YAAY,EAAEI,GAAG,CAACG,IAAJ,CAASC;AAHR,OAAD,CAAhB;AAKD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;;AAWD,WAASC,iBAAT,CAA4BC,KAA5B,EAAmC;AAChC,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACD;;AACD,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEhB,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Jumbotron from \"./component/Jumbotron\";\nimport Textbox from \"./component/Textbox\";\nimport Table from \"./component/Table\";\nimport EmployeeContext from \"./utils/EmployeeContext\";\n\nimport API from \"./utils/api\";\n\nfunction App() {\n  const [employeeState, setEmployeeState] = useState({\n    employeeList: [],\n    originalList: [],\n    search: \"\",\n  });\n\n  useEffect(() => {\n    API.getEmployee().then((res) => {\n      console.log(res.data.results);\n      setEmployeeState({\n        ...employeeState,\n        employeeList: res.data.results,\n        originalList: res.data.results,\n      });\n    });\n  }, []);\n\n function handleInputChange (event) {\n    const {name, value} = event.target \n  }\n  return (\n    <EmployeeContext.Provider value={employeeState}>\n      <Jumbotron />\n      <Textbox />\n      <br />\n      <Table />\n    </EmployeeContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}