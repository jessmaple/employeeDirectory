{"ast":null,"code":"var _jsxFileName = \"/Users/maple/Desktop/employeeDirectory/employeeDirectory/employee_directory/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Jumbotron from \"./component/Jumbotron\";\nimport Textbox from \"./component/Textbox\";\nimport Table from \"./component/Table\";\nimport EmployeeContext from \"./utils/EmployeeContext\";\nimport API from \"./utils/api\";\n\nfunction App() {\n  const [employeeState, setEmployeeState] = useState({\n    employeeList: [],\n    originalList: [],\n    search: \"\"\n  });\n  useEffect(() => {\n    API.getEmployee().then(res => {\n      console.log(res.data.results);\n      setEmployeeState({ ...employeeState,\n        employeeList: res.data.results,\n        originalList: res.data.results\n      });\n    });\n  }, []);\n\n  const handleSubmit = columnName => {\n    let newEmployeeList = employeeState.employeeList.sort((a, b) => {\n      return a.name[columnName].localeCompare(b.name[columnName]);\n    });\n    setEmployeeState({ ...employeeState,\n      employeeList: newEmployeeList\n    });\n  };\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEmployeeState({ ...employeeState,\n      [name]: value\n    });\n    const newEmployeeList = employeeState.originalList.filter(person => {\n      return person.name.first.toLowerCase().indexOf(value.toLowerCase()) > -1 || person.name.last.toLowerCase().indexOf(value.toLowerCase()) > -1;\n    });\n    setEmployeeState({ ...employeeState,\n      employeeList: newEmployeeList,\n      search: value\n    });\n    console.log(employeeState.employeeList);\n  };\n\n  return /*#__PURE__*/React.createElement(EmployeeContext.Provider, {\n    value: employeeState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Textbox, {\n    handleInputChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maple/Desktop/employeeDirectory/employeeDirectory/employee_directory/src/App.js"],"names":["React","useState","useEffect","Jumbotron","Textbox","Table","EmployeeContext","API","App","employeeState","setEmployeeState","employeeList","originalList","search","getEmployee","then","res","console","log","data","results","handleSubmit","columnName","newEmployeeList","sort","a","b","name","localeCompare","handleInputChange","event","value","target","filter","person","first","toLowerCase","indexOf","last"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Jumbotron from \"./component/Jumbotron\";\nimport Textbox from \"./component/Textbox\";\nimport Table from \"./component/Table\";\nimport EmployeeContext from \"./utils/EmployeeContext\";\n\nimport API from \"./utils/api\";\n\nfunction App() {\n  const [employeeState, setEmployeeState] = useState({\n    employeeList: [],\n    originalList: [],\n    search: \"\",\n  });\n\n  useEffect(() => {\n    API.getEmployee().then((res) => {\n      console.log(res.data.results);\n      setEmployeeState({\n        ...employeeState,\n        employeeList: res.data.results,\n        originalList: res.data.results,\n      });\n    });\n  }, []);\n\n  const handleSubmit = (columnName) => {\n    let newEmployeeList = employeeState.employeeList.sort((a, b) => {\n      return a.name[columnName].localeCompare(b.name[columnName]);\n    });\n\n     setEmployeeState({\n       ...employeeState, \n       employeeList:newEmployeeList\n     })\n\n  };\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setEmployeeState({\n      ...employeeState,\n\n      [name]: value,\n    });\n\n    const newEmployeeList = employeeState.originalList.filter((person) => {\n      return (\n        person.name.first.toLowerCase().indexOf(value.toLowerCase()) > -1 ||\n        person.name.last.toLowerCase().indexOf(value.toLowerCase()) > -1\n      );\n    });\n\n    setEmployeeState({\n      ...employeeState,\n\n      employeeList: newEmployeeList,\n      search: value,\n    });\n    console.log(employeeState.employeeList);\n  };\n  return (\n    <EmployeeContext.Provider value={employeeState}>\n      <Jumbotron />\n      <Textbox handleInputChange={handleInputChange} />\n      <br />\n      <Table handleSubmit = {\n        handleSubmit\n      }/>\n    </EmployeeContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}